title: "Demo floret vectors for English NER in StackOverflow"
description: "Train floret vectors and compare default vs. floret vectors for in-domain (StackOverflow) and out-of-domain (GitHub) test sets. The data comes from [Code and Named Entity Recognition in StackOverflow](https://aclanthology.org/2020.acl-main.443/)."
# Variables can be referenced across the project.yml using ${vars.var_name}
vars:
  name: "floret_en_so_ner_demo"
  lang: "en"
  oscar_dataset: "unshuffled_deduplicated_en"
  max_texts: 500000
  n_process: 8
  treebank: "StackOverflowNER"
  train_name: "resources/annotated_ner_data/StackOverflow/train"
  dev_name: "resources/annotated_ner_data/StackOverflow/dev"
  test_name: "resources/annotated_ner_data/StackOverflow/test"
  ood_test_name: "resources/annotated_ner_data/GitHub/GH_test_set"
  gpu_id: -1

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.
directories: ["assets", "configs", "corpus", "metrics", "software", "training", "vectors"]

# Assets that should be downloaded or available in the directory. We're shipping
# them with the project, so they won't have to be downloaded.
assets:
  - dest: "software/floret"
    git:
      repo: "https://github.com/explosion/floret"
      branch: "master"
      path: ""
  - dest: "assets/${vars.treebank}"
    git:
      repo: "https://github.com/jeniyat/StackOverflowNER/"
      branch: "master"
      path: ""

## Workflows are sequences of commands (see below) executed in order. You can
## run them via "spacy project run [workflow]". If a commands's inputs/outputs
## haven't changed, it won't be re-run.
workflows:
  all:
    - compile-fasttext
    - tokenize-oscar
    - train-fasttext-standard-vectors
    - train-floret-vectors
    - init-standard-vectors
    - init-floret-vectors
    - create-config
    - convert
    - train-novectors
    - train-standard
    - train-floret
    - evaluate
    - evaluate-ood

# Project commands, specified in a style similar to CI config files (e.g. Azure
# pipelines). The name is the command name that lets you trigger the command
# via "spacy project run [command] [path]". The help message is optional and
# shown when executing "spacy project run [optional command] [path] --help".
commands:
  - name: "compile-fasttext"
    help: "Compile floret"
    script:
      - "make -C software/floret"
    outputs:
      - "software/floret/floret"

  - name: "tokenize-oscar"
    help: "Download, tokenize, and sentencize data"
    script:
      - "python scripts/tokenize_dataset.py ${vars.lang} ${vars.oscar_dataset} ${vars.max_texts} corpus/${vars.oscar_dataset}.${vars.max_texts}.tok.txt --n-process=${vars.n_process}"
    deps:
      - "scripts/tokenize_dataset.py"
    outputs:
      - "corpus/${vars.oscar_dataset}.${vars.max_texts}.tok.txt"

  - name: "train-fasttext-standard-vectors"
    help: "Train fasttext standard vectors"
    script:
      - "software/floret/floret cbow -dim 300 -minCount 20 -minn 5 -maxn 6 -neg 10 -thread ${vars.n_process} -input corpus/${vars.oscar_dataset}.${vars.max_texts}.tok.txt -output vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10"
    deps:
      - "corpus/${vars.oscar_dataset}.${vars.max_texts}.tok.txt"
    outputs:
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.vec"
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.bin"

  - name: "train-floret-vectors"
    help: "Train floret vectors"
    script:
      - "software/floret/floret cbow -dim 300 -minCount 20 -minn 5 -maxn 6 -neg 10 -mode floret -hashCount 2 -bucket 20000 -thread ${vars.n_process} -input corpus/${vars.oscar_dataset}.${vars.max_texts}.tok.txt -output vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.modeFloret.hashCount2.bucket20000"
    deps:
      - "corpus/${vars.oscar_dataset}.${vars.max_texts}.tok.txt"
    outputs:
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.modeFloret.hashCount2.bucket20000.floret"
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.modeFloret.hashCount2.bucket20000.vec"
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.modeFloret.hashCount2.bucket20000.bin"

  - name: "init-standard-vectors"
    help: "Create a default vectors model"
    script:
      - "python -m spacy init vectors ${vars.lang} vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.vec vectors/${vars.oscar_dataset}.${vars.max_texts}_standard_model --prune 20000"
    deps:
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.vec"
    outputs:
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}_standard_model"

  - name: "init-floret-vectors"
    help: "Create an floret vectors model"
    script:
      - "python -m spacy init vectors ${vars.lang} vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.modeFloret.hashCount2.bucket20000.floret vectors/${vars.oscar_dataset}.${vars.max_texts}_floret_model --mode floret"
    deps:
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}.dim300.minCount10.n5-6.neg10.modeFloret.hashCount2.bucket20000.floret"
    outputs:
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}_floret_model"

  - name: "create-config"
    help: "Create a new config with an NER pipeline component"
    script:
      - "python -m spacy init config --lang ${vars.lang} --pipeline ner configs/config.cfg -o accuracy --force"
    outputs:
      - "configs/config.cfg"

  - name: "convert"
    help: "Convert the data to spaCy's format"
    script:
      - "mkdir -p corpus/${vars.treebank}"
      - "python scripts/cut.py 2 assets/${vars.treebank}/${vars.train_name}.txt assets/${vars.treebank}/${vars.train_name}.iob"
      - "python -m spacy convert assets/${vars.treebank}/${vars.train_name}.iob -c ner corpus/${vars.treebank}/ --n-sents 10"
      - "python scripts/cut.py 2 assets/${vars.treebank}/${vars.dev_name}.txt assets/${vars.treebank}/${vars.dev_name}.iob"
      - "python -m spacy convert assets/${vars.treebank}/${vars.dev_name}.iob -c ner corpus/${vars.treebank}/ --n-sents 10"
      - "python scripts/cut.py 2 assets/${vars.treebank}/${vars.test_name}.txt assets/${vars.treebank}/${vars.test_name}.iob"
      - "python -m spacy convert assets/${vars.treebank}/${vars.test_name}.iob -c ner corpus/${vars.treebank}/ --n-sents 10"
      - "python scripts/cut.py 2 assets/${vars.treebank}/${vars.ood_test_name}.txt assets/${vars.treebank}/${vars.ood_test_name}.iob"
      - "python -m spacy convert assets/${vars.treebank}/${vars.ood_test_name}.iob -c ner corpus/${vars.treebank}/ --n-sents 10"
    deps:
      - "assets/${vars.treebank}/${vars.train_name}.txt"
      - "assets/${vars.treebank}/${vars.dev_name}.txt"
      - "assets/${vars.treebank}/${vars.test_name}.txt"
      - "assets/${vars.treebank}/${vars.ood_test_name}.txt"
    outputs:
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "corpus/${vars.treebank}/test.spacy"
      - "corpus/${vars.treebank}/GH_test_set.spacy"

  - name: "train-novectors"
    help: "Train the model with no vectors"
    script:
      - "python -m spacy train configs/config.cfg --output training/${vars.treebank}-novectors/ --paths.train corpus/${vars.treebank}/train.spacy --paths.dev corpus/${vars.treebank}/dev.spacy --gpu-id ${vars.gpu_id} --initialize.vectors null --components.tok2vec.model.embed.include_static_vectors false"
    deps:
      - "configs/config.cfg"
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}_standard_model"
    outputs:
      - "training/${vars.treebank}-novectors/model-best"

  - name: "train-standard"
    help: "Train the model with standard vectors"
    script:
      - "python -m spacy train configs/config.cfg --output training/${vars.treebank}.${vars.max_texts}-standard/ --paths.train corpus/${vars.treebank}/train.spacy --paths.dev corpus/${vars.treebank}/dev.spacy --gpu-id ${vars.gpu_id} --initialize.vectors vectors/${vars.oscar_dataset}.${vars.max_texts}_standard_model"
    deps:
      - "configs/config.cfg"
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}_standard_model"
    outputs:
      - "training/${vars.treebank}.${vars.max_texts}-standard/model-best"

  - name: "train-floret"
    help: "Train the model with floret vectors"
    script:
      - "python -m spacy train configs/config.cfg --output training/${vars.treebank}.${vars.max_texts}-floret/ --paths.train corpus/${vars.treebank}/train.spacy --paths.dev corpus/${vars.treebank}/dev.spacy --gpu-id ${vars.gpu_id} --initialize.vectors vectors/${vars.oscar_dataset}.${vars.max_texts}_floret_model"
    deps:
      - "configs/config.cfg"
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "vectors/${vars.oscar_dataset}.${vars.max_texts}_floret_model"
    outputs:
      - "training/${vars.treebank}.${vars.max_texts}-floret/model-best"

  - name: "evaluate"
    help: "Evaluate the models and export metrics"
    script:
      - "mkdir -p metrics/${vars.treebank}-novectors"
      - "python -m spacy evaluate training/${vars.treebank}-novectors/model-best corpus/${vars.treebank}/test.spacy --output metrics/${vars.treebank}-novectors/metrics.json --gpu-id ${vars.gpu_id}"
      - "mkdir -p metrics/${vars.treebank}.${vars.max_texts}-standard"
      - "python -m spacy evaluate training/${vars.treebank}.${vars.max_texts}-standard/model-best corpus/${vars.treebank}/test.spacy --output metrics/${vars.treebank}.${vars.max_texts}-standard/metrics.json --gpu-id ${vars.gpu_id}"
      - "mkdir -p metrics/${vars.treebank}.${vars.max_texts}-floret"
      - "python -m spacy evaluate training/${vars.treebank}.${vars.max_texts}-floret/model-best corpus/${vars.treebank}/test.spacy --output metrics/${vars.treebank}.${vars.max_texts}-floret/metrics.json --gpu-id ${vars.gpu_id}"
    deps:
      - "corpus/${vars.treebank}/test.spacy"
      - "training/${vars.treebank}-novectors/model-best"
      - "training/${vars.treebank}.${vars.max_texts}-standard/model-best"
      - "training/${vars.treebank}.${vars.max_texts}-floret/model-best"
    outputs:
      - "metrics/${vars.treebank}-novectors/metrics.json"
      - "metrics/${vars.treebank}.${vars.max_texts}-standard/metrics.json"
      - "metrics/${vars.treebank}.${vars.max_texts}-floret/metrics.json"

  - name: "evaluate-ood"
    help: "Evaluate the models and export metrics"
    script:
      - "mkdir -p metrics/${vars.treebank}-novectors"
      - "python -m spacy evaluate training/${vars.treebank}-novectors/model-best corpus/${vars.treebank}/GH_test_set.spacy --output metrics/${vars.treebank}-novectors/metrics-ood.json --gpu-id ${vars.gpu_id}"
      - "mkdir -p metrics/${vars.treebank}.${vars.max_texts}-standard"
      - "python -m spacy evaluate training/${vars.treebank}.${vars.max_texts}-standard/model-best corpus/${vars.treebank}/GH_test_set.spacy --output metrics/${vars.treebank}.${vars.max_texts}-standard/metrics-ood.json --gpu-id ${vars.gpu_id}"
      - "mkdir -p metrics/${vars.treebank}.${vars.max_texts}-floret"
      - "python -m spacy evaluate training/${vars.treebank}.${vars.max_texts}-floret/model-best corpus/${vars.treebank}/GH_test_set.spacy --output metrics/${vars.treebank}.${vars.max_texts}-floret/metrics-ood.json --gpu-id ${vars.gpu_id}"
    deps:
      - "corpus/${vars.treebank}/GH_test_set.spacy"
      - "training/${vars.treebank}-novectors/model-best"
      - "training/${vars.treebank}.${vars.max_texts}-standard/model-best"
      - "training/${vars.treebank}.${vars.max_texts}-floret/model-best"
    outputs:
      - "metrics/${vars.treebank}-novectors/metrics-ood.json"
      - "metrics/${vars.treebank}.${vars.max_texts}-standard/metrics-ood.json"
      - "metrics/${vars.treebank}.${vars.max_texts}-floret/metrics-ood.json"
